@using CourseWorkSpring2023.Entities;
@using CourseWorkSpring2023.Models.HomeViewModels;
@using CourseWorkSpring2023.Models.Moderator;
@model HomeViewModel;
@{
    ViewData["Title"] = "Home Page";
}

@await Component.InvokeAsync("PostsFilter")

<div class="posts-container">
    @foreach (var post in Model.Posts)
    {
        <div class="post content">
            <div class="custom-post-info">
                <div>@Html.ActionLink(@post.Author.NickName, "UserPage", "Home", new { userName = post.Author.UserName})</div>
                <div>Дата публикации - @post.Posted</div>
            </div>

            <!--Пост спрятан - @post.IsHidden.ToString()-->
            

            @if (User.IsInRole("Moderator"))
                @await Component.InvokeAsync("ModeratorTools", new { ContentType = "post", Id = post.Id})

            <h2 class="custom-post-title">@post.Header</h2>
            
            <div class="custom-post-comments_count">
                Комментарии - @post.CommentsCount
            </div>
            
            <div class="custom-rate-btns">
            @if(Model.ActiveUser == null)
            {
                <a class="" asp-area="Identity" asp-page="/Account/Register"> <img src="~/icons/RatingIcon.svg"/></a>
                <div class="rating">@post.Rating</div>
                <a class="" asp-area="Identity" asp-page="/Account/Register"> <img src="~/icons/RatingIcon.svg"/> </a>
            }
            else
            {
                @if (Model.UpvotedPostsIds.Contains(post.Id))
                {
                    <div class="likeBtn" data-isPicked="true" data-Id=@post.Id data-action="remove_upvote">
                        <img src="~/icons/RatingIcon.svg"/>
                        </div>
                    <div class="rating">@post.Rating</div>
                    <div class="dislikeBtn" data-isPicked="false" data-Id=@post.Id data-action="downvote_and_remove_upvote">
                        <img src="~/icons/RatingIcon.svg"/>
                    </div>
                }
                else if (Model.DownvotedPostsIds.Contains(post.Id))
                {
                    <div class="likeBtn" data-isPicked="false" data-Id=@post.Id data-action="upvote_and_remove_downvote">
                        <img src="~/icons/RatingIcon.svg"/>
                    </div>
                    <div class="rating">@post.Rating</div>
                    <div class="dislikeBtn" data-isPicked="true" data-Id=@post.Id data-action="remove_downvote">
                        <img src="~/icons/RatingIcon.svg"/>
                    </div>
                }
                else
                {
                    <div class="likeBtn" data-isPicked="false" data-Id=@post.Id data-action="upvote">
                        <img src="~/icons/RatingIcon.svg"/>
                    </div>
                    <div class="rating">@post.Rating</div>
                    <div class="dislikeBtn" data-isPicked="false" data-Id=@post.Id data-action="downvote">
                        <img src="~/icons/RatingIcon.svg"/>
                    </div>
                }
            }
            </div>
            <a class="custom-post-open custom-red_btn" asp-action="Post" asp-route-postId=@post.Id>Открыть</a>
        </div>
    }
</div>

<a href="#logo" class="custom-go_top_btn custom-red_btn">
    Наверх
</a>

@section scripts{
    <script src="~/js/CommonActions/ratings.js"></script>
}