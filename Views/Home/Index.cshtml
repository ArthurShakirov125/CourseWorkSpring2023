@using CourseWorkSpring2023.Custom;
@using CourseWorkSpring2023.Models.HomeViewModels;
@using CourseWorkSpring2023.Models.Moderator;
@model HomeViewModel;
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<style>
    .post{
        border: black solid 1px;
        margin: 20px;
    }
</style>

@await Component.InvokeAsync("PostsFilter")

<div class="posts-container">
    @foreach (var post in Model.Posts)
    {
        <div class="post content">
            @if (User.IsInRole("Moderator"))
                @await Component.InvokeAsync("ModeratorTools", new { ContentType = "post", Id = post.Id})
            Пользователь
            @post.Author.NickName
            <br>
            @post.Header
            <br>
            Дата публикации - @post.Posted
            <br>
            Комментарии - @post.CommentsCount
            <br>
            Пост спрятан - @post.IsHidden.ToString()
            <p class="rating">@post.Rating</p>
            @if(Model.ActiveUser == null)
            {
                <a class="btn btn-secondary" asp-area="Identity" asp-page="/Account/Register">+</a>
                <a class="btn btn-secondary" asp-area="Identity" asp-page="/Account/Register">-</a>
            }
            else
            {
                @if (Model.UpvotedPostsIds.Contains(post.Id))
                {
                    <button class="btn btn-warning likeBtn"   data-isPicked="true"  data-Id=@post.Id data-action="remove_upvote">+</button>
                    <button class="btn btn-secondary dislikeBtn" data-isPicked="false" data-Id=@post.Id data-action="downvote_and_remove_upvote">-</button>
                }
                else if (Model.DownvotedPostsIds.Contains(post.Id))
                {
                    <button class="btn btn-secondary likeBtn" data-isPicked="false" data-Id=@post.Id data-action="upvote_and_remove_downvote">+</button>
                    <button class="btn btn-warning dislikeBtn"   data-isPicked="true" data-Id=@post.Id data-action="remove_downvote">-</button>
                }
                else
                {
                    <button class="btn btn-secondary likeBtn" data-isPicked="false" data-Id=@post.Id data-action="upvote">+</button>
                    <button class="btn btn-secondary dislikeBtn" data-isPicked="false" data-Id=@post.Id data-action="downvote">-</button>
                }
            }
            <a asp-action="Post" asp-route-postId=@post.Id>Открыть</a>
        </div>
    }
</div>

@section scripts{
    
<script>
    window.onload = function(){
    
        $(".likeBtn").click(function(){

            let rating = parseInt($(this).parent().children(".rating").html());
        

            let mirror = $(this).next(".dislikeBtn");

            let dataObject = new Object();
            dataObject.Action = $(this).attr("data-action");
            dataObject.Id = $(this).attr("data-Id");

            let isDisPicked = mirror.attr("data-isPicked") == "true";
            let isLikePicked = $(this).attr("data-isPicked") == "true";



            if(!isDisPicked && !isLikePicked){ // обычный лайк
                $(this).removeClass("btn-secondary").addClass("btn-warning");
                $(this).attr("data-isPicked", "true");

                $(this).attr("data-action", "remove_upvote");
                mirror.attr("data-action", "downvote_and_remove_upvote");

                rating = rating + 1;

            }
            if(isLikePicked && !isDisPicked){ // убираем лайк
                $(this).removeClass("btn-warning").addClass("btn-secondary");
                $(this).attr("data-isPicked", "false");

                $(this).attr("data-action", "upvote");
                mirror.attr("data-action", "downvote");

                rating = rating - 1;
            }
            if(!isLikePicked && isDisPicked){ // меняем диз на лайк
                $(this).removeClass("btn-secondary").addClass("btn-warning");
                $(this).attr("data-isPicked", "true");

                mirror.removeClass("btn-warning").addClass("btn-secondary");
                mirror.attr("data-isPicked", "false");

                $(this).attr("data-action", "remove_upvote");
                mirror.attr("data-action", "downvote_and_remove_upvote");

                rating = rating + 2;
            }

            $(this).parent().children(".rating").text(rating);

            $.ajax({
                type: "POST",
                url: "/Home/GetAjax",
                data: dataObject,
                success: function(data){
                    if(data == "200"){
                    }
                    else if(data = "400"){
                        alert("error 400");
                    }
                },
                failure:function(err){

                }
            })
        });


        $(".dislikeBtn").click(function(){

            let mirror = $(this).prev(".likeBtn");

            let dataObject = new Object();
            dataObject.Action = $(this).attr("data-action");
            dataObject.Id = $(this).attr("data-Id");

            let isDisPicked = mirror.attr("data-isPicked") == "true";
            let isLikePicked = $(this).attr("data-isPicked") == "true";

            let rating = parseInt($(this).parent().children(".rating").html());

            if(!isDisPicked && !isLikePicked){ // обычный диз
                $(this).removeClass("btn-secondary").addClass("btn-warning");
                $(this).attr("data-isPicked", "true");

                $(this).attr("data-action", "remove_downvote");
                mirror.attr("data-action", "upvote_and_remove_downvote");

                rating = rating - 1;

            }
            if(isLikePicked && !isDisPicked){ // убираем диз
                $(this).removeClass("btn-warning").addClass("btn-secondary");
                $(this).attr("data-isPicked", "false");

                $(this).attr("data-action", "downvote");
                mirror.attr("data-action", "upvote");

                rating = rating + 1;

            }
            if(!isLikePicked && isDisPicked){ // меняем лайк на диз
                $(this).removeClass("btn-secondary").addClass("btn-warning");
                $(this).attr("data-isPicked", "true");

                mirror.removeClass("btn-warning").addClass("btn-secondary");
                mirror.attr("data-isPicked", "false");

                $(this).attr("data-action", "remove_downvote");
                mirror.attr("data-action", "upvote_and_remove_downvote");

                rating = rating - 2;
            }

            $(this).parent().children(".rating").text(rating);

            $.ajax({
                type: "POST",
                url: "/Home/GetAjax",
                data: dataObject,
                success: function(data){
                    if(data == "200"){
                    }
                    else if(data = "400"){
                        alert("error 400");
                    }
                },
                failure:function(err){

                }
            })
        });


    };
</script>
}