@using CourseWorkSpring2023.Models.IndexViewModel;
@using CourseWorkSpring2023.Models.Moderator;
@model PostViewModel

<div class="custom-post_strip">
    <div>
        <div>@Model.Header</div>
            <div class="custom-rate-btns">
                        @if(Model.ActiveUser == null)
                        {
                            <a class="" asp-area="Identity" asp-page="/Account/Register"> <img src="~/icons/RatingIcon.svg"/></a>
                            <div class="rating">@Model.Rating</div>
                            <a class="" asp-area="Identity" asp-page="/Account/Register"> <img src="~/icons/RatingIcon.svg"/> </a>
                        }
                        else
                        {
                            @if (Model.UpvotedCommentsIds.Contains(Model.Id))
                            {
                                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                                RatingBtns>(RenderMode.ServerPrerendered,new { UserId = Model.ActiveUser.Id, ContentId = Model.Id, Rating = Model.Rating, ISPostLiked = true }))
                            }
                            else if (Model.DownvotedCommentsIds.Contains(Model.Id))
                            {
                                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                                RatingBtns>(RenderMode.ServerPrerendered,new { UserId = Model.ActiveUser.Id, ContentId = Model.Id, Rating = Model.Rating, IsPostDisLiked = true }))
                            }
                            else
                            {
                                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                                RatingBtns>(RenderMode.ServerPrerendered,new { UserId = Model.ActiveUser.Id, ContentId = Model.Id, Rating = Model.Rating }))
                            }
                        }
            </div>
    </div>
    <div>
        <div class="custom-strip_author">
                <img class="custom-greet_img" src="@Model.UserAvatar" />
                @Html.ActionLink(@Model.Author.NickName, "UserPage", "User", new { userName = Model.Author.UserName})
        </div>
        <div>@Html.ActionLink("Закрыть", "Index", "Posts")</div>
    </div>
</div>

<div class="custom-posts_container">
    <div class="custom-post_header">
        <h1>@Model.Header</h1>
        <div>@Model.Posted</div>
</div>

    <div class="custom-post_text">
        @Model.ProcessedText
    </div>

    <textarea id="text_input"></textarea>
    <p>Комментариев - @Model.CommentsCount</p>

    @if(Model.ActiveUser == null){
        <a class="custom-red_btn custom-leave_message_unsigned" asp-area="Identity" asp-page="/Account/Register">Оставить комментарий</a>
    }
    else{
        @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                        CommentBtn>(RenderMode.ServerPrerendered,new { PostId = Model.Id, UserName = User.Identity.Name}))
    }

    <div class="custom-comment_section">
        @if(Model.Comments.Any()){
            @foreach (var comment in Model.Comments)
            {
                @if (User.IsInRole("Moderator") || User.Identity.Name == Model.Author.Email)
                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                        ModeratorTools>(RenderMode.ServerPrerendered,new { ContentType = "comment", Id = comment.Id, IsHidden = comment.IsHidden}))

                <div class="custom-comment" id="@comment.Id">
                    <div class="custom-rate-btns">
                        @if(Model.ActiveUser == null)
                        {
                            <a class="" asp-area="Identity" asp-page="/Account/Register"> <img src="~/icons/RatingIcon.svg"/></a>
                            <div class="rating">@comment.Rating</div>
                            <a class="" asp-area="Identity" asp-page="/Account/Register"> <img src="~/icons/RatingIcon.svg"/> </a>
                        }
                        else
                        {
                            @if (Model.UpvotedCommentsIds.Contains(comment.Id))
                            {
                                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                                RatingBtns>(RenderMode.ServerPrerendered,new { UserId = Model.ActiveUser.Id, ContentId = comment.Id, Rating = comment.Rating, ISPostLiked = true }))
                            }
                            else if (Model.DownvotedCommentsIds.Contains(comment.Id))
                            {
                                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                                RatingBtns>(RenderMode.ServerPrerendered,new { UserId = Model.ActiveUser.Id, ContentId = comment.Id, Rating = comment.Rating, IsPostDisLiked = true }))
                            }
                            else
                            {
                                @(await Html.RenderComponentAsync<CourseWorkSpring2023.BlazorComponents.
                                RatingBtns>(RenderMode.ServerPrerendered,new { UserId = Model.ActiveUser.Id, ContentId = comment.Id, Rating = comment.Rating }))
                            }
                        }
                    </div>

                    <div>
                        <div class="custom-comment_info">
                            <img class="custom-greet_img" src="@comment.UserAvatarPath">
                            <div>@Html.ActionLink(comment.User.NickName, "UserPage", "Home", new { userName = comment.User.UserName})</div>
                            <div>@comment.Uploaded</div>
                        </div>
                        <div>@comment.ProcessedText</div>
                    </div>
                </div>
            }
        }else{
            <div class="no-comments">
                <p>Комментариев пока нету</p>
            </div>
        }    
        </div>
</div>


@section scripts{
    <script src="~/lib/Trumbowyg/dist/trumbowyg.min.js"></script>
    <script src="~/lib/Trumbowyg/dist/langs/ru.js"></script>
    <script src="~/js/RichTextArea/rich_text_area.js"></script>
    <script src="~/js/Blazor/BlazorHandler.js"></script>
    <script src="~/js/fixedStrip.js"></script>
}

@section AddToHead{
    <link rel="stylesheet" href="~/lib/Trumbowyg/dist/ui/trumbowyg.min.css">
    <link rel="stylesheet" href="~/css/post_page.css"/>
}